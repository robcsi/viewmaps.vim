*viewmpas.txt*	Plugin for displaying user-defined mappings from vimrc file
		For Vim version 7.4 and above.
		Last Change: 2016 Nov 04 10:41 AM
	

				By Robert Sarkozi
	        sarkozi dot robert email-at-sign gmail dot com

						    *viewmaps* *viewmaps-plugin*
	Contents:

		Commands...................|viewmaps-invoking|
		Mappings...................|viewmaps-mappings|
		Settings...................|viewmaps-settings|
		Future plans...............|viewmaps-plans|

You can use this plugin to populate a list of your vimrc mappings in the 
QuickFix window.
The mappings can be retrieved by VIm mode types (like normal, insert, visual,
select and operator-pending mode).

The 'map' command displays all availabe and loaded mappings in VIm and that
list contain too much to process just by looking at it. This plugin helps
you view only the ones defined by you with comments related to them.

Mappings can be many, this is why filtering is possible for different modes.
By populating the QuickFix window you can quickly jump from there to the vimrc
file on the exact line where the mappings are defined.
Comments are also displayed: currently it only displays one line comments from
the line right above the mappings or comments at the end of the mapping line,
starting with the last available '"' character to the end of the line.

Get the plugin from here on Github: TODO

You can use Pathogen to include it into your bundle.

Other features include:
	o The plugin tries to detect rc files that are sourced in your main
	vimrc. Only lines starting with 'source' are parsed and mappings loaded
	from those files, too

	o Mappings can be displayed in and echoed list, like the 'map' command
	does, just for quick reference. The display formatting is different
	in this case, compared to the QuickFix format

	o In the Quickfix window (leveraging its functionality) you can press
	<Enter> and go to the selected line in the main or sourced vimrc file
	There you can edit the mapping or its comment as desired and maybe
	reload the list of mappings into the QuickFix window
	
	o There is an option for configuring the position of the QuickFix window,
	  g:viewmap_quickfix_orientation (horizontal or vertical)

	o There is an option for configuring the width or height of the Quickfix
	window depending on what its position is: g:viewmaps_quickfix_dimension

	o The plugin leverages the functionality of the QuickFix window by using
	  jumping to lines in the rc files, also leverages the '[q' and ']q' et.al.
	  keyboard shortcuts defined by the vim-unimpaired plugin

Naturally, you must set 'nocompatible' in your |vimrc| file to use this plugin. You can
stop the plugin from being loaded by setting the "g:loaded_viewmaps" variable: >

	:let g:loaded_viewmaps = 1

==============================================================================
COMMANDS						    *viewmaps-invoking*

When you start VIm the next time, you
then enter the command in the format below:
>
    :ViewMaps <mode> <destination>
<
E.g.: 
>
    :ViewMaps n quickfix "to display normal mode mappings in the QuickFix window.
<

Then the QuickFix window will be populated with lines like the following:

    " ...
    \stuff\git\.vim\.vimrc|594| " Don't move when you use * 
    \stuff\git\.vim\.vimrc|595| nnoremap <silent> * :let stay_star_view = winsaveview()<cr>*:call winrestview(stay_star_view)<cr>
    \stuff\git\.vim\.vimrc||  
    \stuff\git\.vim\.vimrc|600| " run shell commands and get their output in your file
    \stuff\git\.vim\.vimrc|601| nnoremap Q !!sh<cr>
    \stuff\git\.vim\.vimrc||  
    \stuff\git\.vim\.vimrc|603| " shortcut to insert current date in file
    \stuff\git\.vim\.vimrc|604| nnoremap <leader>D i<C-R>=strftime("%Y %b %d")<cr><esc>
    " ...

As you may know, the first column contains the file path, the second one the line
the mapping or comment is on, and then the content. This information in this format
helps the QuickFix window to take you to the exact line in the vimrc file.

==============================================================================
MAPPINGS						    *viewmaps-mappings*

You can define mappings for the plugin to be called more easily:
>
    nnoremap <silent> <leader>dn :ViewMaps n quickfix<CR> "display normal mode maps
    nnoremap <silent> <leader>di :ViewMaps i quickfix<CR> "display insert mode maps
    nnoremap <silent> <leader>dv :ViewMaps v quickfix<CR> "display visual mode maps
<

Add these lines to you .vimrc. These are the ones I use most, personally.

==============================================================================
SETTINGS						    *viewmaps-settings*

You can set these variables in your vimrc file before the plugin is loaded to
change its default behavior

g:viewmaps_quickfix_orientation
	The position or orientation of the QuickFix window where it will be displayed.
	Can be either horizontal (displayed where it appears usually by default) or
	vertically, on the right (vertical botright copen is used for this).

	Default: 0 (horizontal; change to 1 for vertical)

g:viewmaps_quickfix_dimension
	The width of the QuickFix window that the plugin attempts to maintain.

	Default: 25 (for the default of horizontal orientation)

==============================================================================
FUTURE PLANS						    *viewmaps-plans*

Features I plan to do:
    o Ability to read multiline comments
    o Filter by keyword in comments and mapping definitios
    o Load mappings from sourced configuration files recursively
    o Other fixes and refactoring


 vim:ts=8 sw=8 noexpandtab tw=78 ft=help:
